/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VrmSecondaryanimation {
  boneGroups?: VrmSecondaryanimationSpring[];
  colliderGroups?: VrmSecondaryanimationCollidergroup[];
  [k: string]: any;
}
export interface VrmSecondaryanimationSpring {
  /**
   * Annotation comment
   */
  comment?: string;
  /**
   * The resilience of the swaying object (the power of returning to the initial pose).
   */
  stiffiness?: number;
  /**
   * The strength of gravity.
   */
  gravityPower?: number;
  /**
   * The direction of gravity. Set (0, -1, 0) for simulating the gravity. Set (1, 0, 0) for simulating the wind.
   */
  gravityDir?: {
    x?: number;
    y?: number;
    z?: number;
    [k: string]: any;
  };
  /**
   * The resistance (deceleration) of automatic animation.
   */
  dragForce?: number;
  /**
   * The reference point of a swaying object can be set at any location except the origin. When implementing UI moving with warp, the parent node to move with warp can be specified if you don't want to make the object swaying with warp movement.
   */
  center?: number;
  /**
   * The radius of the sphere used for the collision detection with colliders.
   */
  hitRadius?: number;
  /**
   * Specify the node index of the root bone of the swaying object.
   */
  bones?: number[];
  /**
   * Specify the index of the collider group for collisions with swaying objects.
   */
  colliderGroups?: number[];
  [k: string]: any;
}
export interface VrmSecondaryanimationCollidergroup {
  /**
   * The node of the collider group for setting up collision detections.
   */
  node?: number;
  colliders?: {
    /**
     * The local coordinate from the node of the collider group.
     */
    offset?: {
      x?: number;
      y?: number;
      z?: number;
      [k: string]: any;
    };
    /**
     * The radius of the collider.
     */
    radius?: number;
    [k: string]: any;
  }[];
  [k: string]: any;
}
